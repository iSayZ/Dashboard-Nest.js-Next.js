import '@blocknote/core/fonts/inter.css';
import '@blocknote/core/style.css';

/**
 On Server Side, you can use the ServerBlockNoteEditor to render BlockNote documents to HTML. e.g.:

    import { ServerBlockNoteEditor } from "@blocknote/server-util";

    const editor = ServerBlockNoteEditor.create();
    const html = await editor.blocksToFullHTML(document);

You can then use render this HTML as a static page or send it to the client. Make sure to include the editor stylesheets:

    import "@blocknote/core/fonts/inter.css";
    import "@blocknote/core/style.css";

This example has the HTML hard-coded, but shows at least how the document will be rendered when the appropriate style sheets are loaded.
 */

export default function App() {
  // This HTML is generated by the ServerBlockNoteEditor.blocksToFullHTML method
  const html = `

<div class="bn-block-group" data-node-type="blockGroup"><div class="bn-block-outer" data-node-type="blockOuter" data-id="e9dd6552-aacd-491c-affa-836e188caff0"><div class="bn-block" data-node-type="blockContainer" data-id="e9dd6552-aacd-491c-affa-836e188caff0"><div class="bn-block-content" data-content-type="image" data-name="banner.svg" data-url="https://www.blocknotejs.org/img/logos/banner.svg" data-file-block=""><div class="bn-file-block-content-wrapper"><div class="bn-file-and-caption-wrapper"><div class="bn-visual-media-wrapper"><img class="bn-visual-media max-w-full" alt="banner.svg" contenteditable="false" draggable="false" width="512"></div><p class="bn-file-caption"></p></div></div></div></div></div><div class="bn-block-outer" data-node-type="blockOuter" data-id="0bc7eb8a-81c1-4fd2-b40d-bc4bea78af6c"><div class="bn-block" data-node-type="blockContainer" data-id="0bc7eb8a-81c1-4fd2-b40d-bc4bea78af6c"><div class="bn-block-content" data-content-type="paragraph"><p class="bn-inline-content"></p></div></div></div><div class="bn-block-outer" data-node-type="blockOuter" data-id="a9f0af77-e4a2-4779-aba1-749e9a445644"><div class="bn-block" data-node-type="blockContainer" data-id="a9f0af77-e4a2-4779-aba1-749e9a445644"><div class="bn-block-content" data-content-type="paragraph"><p class="bn-inline-content"></p></div></div></div><div class="bn-block-outer" data-node-type="blockOuter" data-id="9b7797db-400d-41f3-986c-a10cb476e8d1"><div class="bn-block" data-node-type="blockContainer" data-id="9b7797db-400d-41f3-986c-a10cb476e8d1"><div class="bn-block-content" data-content-type="paragraph"><p class="bn-inline-content"></p></div></div></div><div class="bn-block-outer" data-node-type="blockOuter" data-id="1f36a04c-935f-4a72-913e-532e2e63455f"><div class="bn-block" data-node-type="blockContainer" data-id="1f36a04c-935f-4a72-913e-532e2e63455f"><div class="bn-block-content" data-content-type="paragraph"><p class="bn-inline-content"></p></div></div></div><div class="bn-block-outer" data-node-type="blockOuter" data-id="5f7440e2-da25-4f2f-ad6f-95d5168f9550"><div class="bn-block" data-node-type="blockContainer" data-id="5f7440e2-da25-4f2f-ad6f-95d5168f9550"><div class="bn-block-content" data-content-type="paragraph"><p class="bn-inline-content">TEST</p></div></div></div><div class="bn-block-outer" data-node-type="blockOuter" data-id="9ac9fa90-348d-4151-a57f-6564c147e62f"><div class="bn-block" data-node-type="blockContainer" data-id="9ac9fa90-348d-4151-a57f-6564c147e62f"><div class="bn-block-content" data-content-type="paragraph"><p class="bn-inline-content"></p></div></div></div><div class="bn-block-outer" data-node-type="blockOuter" data-id="ca788c5f-80c3-4f9b-b18d-712f4d8333e9"><div class="bn-block" data-node-type="blockContainer" data-id="ca788c5f-80c3-4f9b-b18d-712f4d8333e9"><div class="bn-block-content" data-content-type="paragraph"><p class="bn-inline-content"></p></div></div></div></div>

`;

  // Renders the editor instance using a React component.
  return (
    <div className="bn-container">
      <div
        className=" bn-default-styles"
        dangerouslySetInnerHTML={{ __html: html }}
      />
    </div>
  );
}
